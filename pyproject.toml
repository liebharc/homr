[tool.poetry]
name = "homr"
version = "0.1.0"
description = "End-to-end Optical Music Recognition (OMR) system build on top of vision transformers."
authors = ["Christian Liebhardt <christian.liebhardt@arcor.de>"]
license = "AGPL-3.0"
readme = "README.md"
homepage = "https://github.com/liebharc"
documentation = "https://github.com/liebharc/homr"

[tool.poetry.dependencies]
python = "^3.10"
numpy = "^1.26.4"
tensorflow = "^2.15.1"
opencv-python-headless = "^4.9.0.80"
Pillow = "^10.0.0"
types-Pillow = "^10.1.0.1"
scipy = "^1.11.2"
types-tensorflow = "^2.12.0.10"
torch = "^2.2.1"
typing_extensions = "^4.5.0"
transformers = "^4.39.1"
x-transformers = "^1.27.19"
musicxml = "^1.4"
easyocr = "^1.7.1"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.2"
mypy = "^1.8.0"
black = "^24.2.0"
ruff = "^0.3.5"
isort = "^5.13.2"
pyupgrade = "^3.15.1"
pre-commit = "^3.6.2"
pyclean = "^2.7.3"
coverage = "^7.4.4"
augly = "^1.0.0"
albumentations = "^1.4.0"
timm = "^0.9.16"
editdistance = "^0.8.1"
xmltodict = "^0.13.0"
torchvision = "^0.17.1"
types-xmltodict = "^0.13.0.3"
transformers = {extras = ["torch"], version = "^4.40.2"}

[tool.poetry.group.docs]
[tool.poetry.group.docs.dependencies]
sphinx = "^7.2.6"
furo = "^2023.5.20"
myst-parser = "^2.0.0"
myst-nb = "^1.1.0"

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
style = "semver"
pattern  = "^(?P<base>\\d+\\.\\d+\\.\\d+)(-?((?P<stage>[a-zA-Z]+)\\.?(?P<revision>\\d+)?))?"

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry_dynamic_versioning.backend"

## Tools
[tool.black]
target-version = ['py311']
line-length = 100
preview = true

[tool.ruff]
line-length = 100
target-version = "py311"
[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "UP", # pyupgrade
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "S", # flake8-bandit
    "A", # flake8-builtins
    "INP", # flake8-no-pep420
    "PIE", # flake8-pie
    "PL", # pylint
    "TID252", # flake8-tidy-imports
]
ignore = [
    "UP015", # Unnecessary open mode parameters
    "PLC1901", # compare-to-empty-string
    "PLR0913", # Too many arguments to function call
    "S311",  # pseudo-random generators are not suitable for cryptographic purposes - we use them to randomize training data
    "S105",  # we use the term "token" for transformer tokens which sometimes triggers false positives of this warning
    "UP035",  # mypy doesn't seem to support "from typing import Self" yet
]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.isort]
profile = "black"
sections = "FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER"

[tool.mypy]
python_version = "3.10"
exclude = ["datasets"]

cache_dir = ".mypy_cache/strict"
show_error_codes = true
show_column_numbers = true

# Strict guidelines taken from https://github.com/pytorch/pytorch/blob/master/mypy-strict.ini
# Across versions of mypy, the flags toggled by --strict vary.  To ensure
# we have reproducible type check, we instead manually specify the flags
follow_imports = "normal"
warn_no_return = true
warn_return_any = true
disallow_any_unimported = true
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
warn_redundant_casts = true
warn_unused_ignores = true
implicit_reexport = false
strict_equality = true

[tool.pytest.ini_options]
log_cli = true
log_cli_level = 10
testpaths = ["tests"]

[tool.poetry.scripts]
homr = "homr.main:main"
